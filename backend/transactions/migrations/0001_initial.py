# Generated by Django 5.2.4 on 2025-07-25 15:51

import django.core.validators
import django.db.models.deletion
import transactions.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=transactions.models.upload_to_user_files, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'csv', 'xlsx', 'xls', 'jpg', 'jpeg', 'png', 'txt'])])),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(choices=[('bank_statement', 'Bank Statement'), ('ewallet_statement', 'E-wallet Statement'), ('receipt', 'Receipt'), ('invoice', 'Invoice'), ('payslip', 'Payslip'), ('other', 'Other')], max_length=20)),
                ('source', models.CharField(choices=[('gcash', 'GCash'), ('paymaya', 'PayMaya'), ('grabpay', 'GrabPay'), ('coins_ph', 'Coins.ph'), ('bpi', 'BPI'), ('bdo', 'BDO'), ('metrobank', 'Metrobank'), ('unionbank', 'UnionBank'), ('security_bank', 'Security Bank'), ('pnb', 'PNB'), ('landbank', 'Landbank'), ('other_bank', 'Other Bank'), ('other_ewallet', 'Other E-wallet'), ('manual_entry', 'Manual Entry'), ('other', 'Other')], max_length=20)),
                ('processing_status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('processed', 'Processed'), ('failed', 'Failed'), ('error', 'Error')], default='uploaded', max_length=20)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'File Upload',
                'verbose_name_plural': 'File Uploads',
                'db_table': 'kitako_file_uploads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='PHP', max_length=3)),
                ('description', models.TextField()),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('transaction_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('fee', 'Fee'), ('refund', 'Refund'), ('other', 'Other')], max_length=20)),
                ('category', models.CharField(choices=[('salary', 'Salary'), ('freelance', 'Freelance Work'), ('business_income', 'Business Income'), ('commission', 'Commission'), ('tips', 'Tips'), ('rental_income', 'Rental Income'), ('investment_income', 'Investment Income'), ('government_benefit', 'Government Benefit'), ('loan_received', 'Loan Received'), ('gift_received', 'Gift Received'), ('food', 'Food & Dining'), ('transportation', 'Transportation'), ('utilities', 'Utilities'), ('rent', 'Rent'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('entertainment', 'Entertainment'), ('shopping', 'Shopping'), ('loan_payment', 'Loan Payment'), ('insurance', 'Insurance'), ('business_expense', 'Business Expense'), ('family_support', 'Family Support'), ('bank_transfer', 'Bank Transfer'), ('ewallet_transfer', 'E-wallet Transfer'), ('cash_in', 'Cash In'), ('cash_out', 'Cash Out'), ('transaction_fee', 'Transaction Fee'), ('service_fee', 'Service Fee'), ('atm_fee', 'ATM Fee'), ('other', 'Other')], max_length=30)),
                ('subcategory', models.CharField(blank=True, max_length=100)),
                ('ai_categorized', models.BooleanField(default=False)),
                ('ai_confidence', models.CharField(blank=True, choices=[('high', 'High (90-100%)'), ('medium', 'Medium (70-89%)'), ('low', 'Low (50-69%)'), ('very_low', 'Very Low (<50%)')], max_length=10, null=True)),
                ('ai_reasoning', models.TextField(blank=True, help_text='AI explanation for categorization')),
                ('manually_verified', models.BooleanField(default=False)),
                ('manual_notes', models.TextField(blank=True)),
                ('source_platform', models.CharField(blank=True, max_length=50)),
                ('counterparty', models.CharField(blank=True, max_length=255)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('anomaly_reason', models.TextField(blank=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='transactions.fileupload')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'kitako_transactions',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['user', 'date'], name='kitako_tran_user_id_9518fd_idx'), models.Index(fields=['transaction_type', 'category'], name='kitako_tran_transac_15080d_idx'), models.Index(fields=['amount'], name='kitako_tran_amount_39d069_idx')],
            },
        ),
    ]
